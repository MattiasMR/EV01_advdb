{
  "service": {
    "service": "DynamoTest",
    "serviceObject": {
      "name": "DynamoTest"
    },
    "provider": {
      "name": "aws",
      "role": "arn:aws:iam::280053524810:role/LabRole",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "sts:AssumeRole",
            "dynamodb:*"
          ],
          "Resource": [
            "arn:aws:dynamodb:us-east-1:*:table/Paciente",
            "arn:aws:dynamodb:us-east-1:*:table/Medico",
            "arn:aws:dynamodb:us-east-1:*:table/Tutor",
            "arn:aws:dynamodb:us-east-1:*:table/FichaClinica",
            "arn:aws:dynamodb:us-east-1:*:table/Medicamentos",
            "arn:aws:dynamodb:us-east-1:*:table/Procedimientos",
            "arn:aws:dynamodb:us-east-1:*:table/Vacunas",
            "arn:aws:dynamodb:us-east-1:*:table/Medicamentos"
          ]
        }
      ],
      "environment": {
        "PACIENTETABLE": "Paciente",
        "MEDICOTABLE": "Medico",
        "TUTORTABLE": "Tutor",
        "FICHACLINICATABLE": "FichaClinica",
        "PROCEDIMIENTOTABLE": "Procedimientos",
        "VACUNATABLE": "Vacunas",
        "MEDICAMENTOTABLE": "Medicamentos"
      },
      "stage": "dev",
      "versionFunctions": true,
      "iam": {
        "role": {
          "statements": [
            {
              "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
            },
            {
              "Effect": "Allow",
              "Action": [
                "iot:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreatePacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-createPaciente"
            }
          },
          "GetPacientesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getPacientes"
            }
          },
          "GetPacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getPaciente"
            }
          },
          "UpdatePacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-updatePaciente"
            }
          },
          "CreateMedicoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-createMedico"
            }
          },
          "GetMedicosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getMedicos"
            }
          },
          "GetMedicoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getMedico"
            }
          },
          "UpdateMedicoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-updateMedico"
            }
          },
          "UpdateEstadoMedicoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-updateEstadoMedico"
            }
          },
          "CreateTutorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-createTutor"
            }
          },
          "GetTutoresLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getTutores"
            }
          },
          "GetTutorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getTutor"
            }
          },
          "UpdateTutorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-updateTutor"
            }
          },
          "GetPacientesByTutorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getPacientesByTutor"
            }
          },
          "GetHistorialPacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getHistorialPaciente"
            }
          },
          "GetFichaClinicaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getFichaClinica"
            }
          },
          "RankingProcedimientosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-rankingProcedimientos"
            }
          },
          "GetVacunasPacienteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-getVacunasPaciente"
            }
          },
          "VolumenYGastoPromedioPorMesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-volumenYGastoPromedioPorMes"
            }
          },
          "DistribucionPorEspecialidadLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-distribucionPorEspecialidad"
            }
          },
          "TopMedicamentosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-topMedicamentos"
            }
          },
          "EvolucionIngresosVsCostesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-evolucionIngresosVsCostes"
            }
          },
          "DemandaVacunasPorMesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/DynamoTest-dev-demandaVacunasPorMes"
            }
          },
          "CreatePacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-createPaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "createPaciente"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "CreatePacienteLogGroup"
            ]
          },
          "GetPacientesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getPacientes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getPacientes"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetPacientesLogGroup"
            ]
          },
          "GetPacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getPaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getPaciente"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetPacienteLogGroup"
            ]
          },
          "UpdatePacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-updatePaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "updatePaciente"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "UpdatePacienteLogGroup"
            ]
          },
          "CreateMedicoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-createMedico",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "createMedico"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "CreateMedicoLogGroup"
            ]
          },
          "GetMedicosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getMedicos",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getMedicos"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetMedicosLogGroup"
            ]
          },
          "GetMedicoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getMedico",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getMedico"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetMedicoLogGroup"
            ]
          },
          "UpdateMedicoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-updateMedico",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "updateMedico"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "UpdateMedicoLogGroup"
            ]
          },
          "UpdateEstadoMedicoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-updateEstadoMedico",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "updateEstadoMedico"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "UpdateEstadoMedicoLogGroup"
            ]
          },
          "CreateTutorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-createTutor",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "createTutor"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "CreateTutorLogGroup"
            ]
          },
          "GetTutoresLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getTutores",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getTutores"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetTutoresLogGroup"
            ]
          },
          "GetTutorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getTutor",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getTutor"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetTutorLogGroup"
            ]
          },
          "UpdateTutorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-updateTutor",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "updateTutor"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "UpdateTutorLogGroup"
            ]
          },
          "GetPacientesByTutorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getPacientesByTutor",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getPacientesByTutor"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetPacientesByTutorLogGroup"
            ]
          },
          "GetHistorialPacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getHistorialPaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getHistorialPaciente"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetHistorialPacienteLogGroup"
            ]
          },
          "GetFichaClinicaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getFichaClinica",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getFichaClinica"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetFichaClinicaLogGroup"
            ]
          },
          "RankingProcedimientosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-rankingProcedimientos",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "rankingProcedimientos"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "RankingProcedimientosLogGroup"
            ]
          },
          "GetVacunasPacienteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-getVacunasPaciente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "getVacunasPaciente"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "GetVacunasPacienteLogGroup"
            ]
          },
          "VolumenYGastoPromedioPorMesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-volumenYGastoPromedioPorMes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "volumenYGastoPromedioPorMes"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "VolumenYGastoPromedioPorMesLogGroup"
            ]
          },
          "DistribucionPorEspecialidadLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-distribucionPorEspecialidad",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "distribucionPorEspecialidad"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "DistribucionPorEspecialidadLogGroup"
            ]
          },
          "TopMedicamentosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-topMedicamentos",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "topMedicamentos"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "TopMedicamentosLogGroup"
            ]
          },
          "EvolucionIngresosVsCostesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-evolucionIngresosVsCostes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "evolucionIngresosVsCostes"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "EvolucionIngresosVsCostesLogGroup"
            ]
          },
          "DemandaVacunasPorMesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-d106c65f-3024",
                "S3Key": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z/DynamoTest.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "DynamoTest-dev-demandaVacunasPorMes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PACIENTETABLE": "Paciente",
                  "MEDICOTABLE": "Medico",
                  "TUTORTABLE": "Tutor",
                  "FICHACLINICATABLE": "FichaClinica",
                  "PROCEDIMIENTOTABLE": "Procedimientos",
                  "VACUNATABLE": "Vacunas",
                  "MEDICAMENTOTABLE": "Medicamentos",
                  "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
                  "SLS_SERVICE": "DynamoTest",
                  "SLS_STAGE": "dev",
                  "SLS_FUNCTION": "demandaVacunasPorMes"
                }
              },
              "Role": "arn:aws:iam::280053524810:role/LabRole"
            },
            "DependsOn": [
              "DemandaVacunasPorMesLogGroup"
            ]
          },
          "CreatePacienteLambdaVersionaoHYpKpjamkjWFObBXJqp0khvuyrmPrl13qzlIgxLw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreatePacienteLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetPacientesLambdaVersionbYbzgpEKJZmtgQZlGupYMPyeWgPdgtBsIEJQTERLO4s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPacientesLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetPacienteLambdaVersionKeJK9cNF6fXleZAKO182V1fHtq38TlXkQArlxdjo8nc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPacienteLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "UpdatePacienteLambdaVersionshyP809TF35FxHHmde73WZ7RbTAHcqNZWwon0SYCIfA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdatePacienteLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "CreateMedicoLambdaVersionGoT1iSXr3fK0Ula8W958qkAUQGzjeAVBSKDZ6DFxZE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateMedicoLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetMedicosLambdaVersionYG8AHCEfoVC3F5OHVpu5AOTvXtPmALcWqcxywkJGk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMedicosLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetMedicoLambdaVersiong5umKU1WfmDmfJBXgDWxl4Dne7U6BPvv9IuTp6qhPA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMedicoLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "UpdateMedicoLambdaVersionVDJdwnrJcjlcK9lEaL5grcHdWbVXBnjK2022aXeKTsw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateMedicoLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "UpdateEstadoMedicoLambdaVersionIyJVqiNt7SohM4xKdHVlv3GqAPczGnwcQZkfsfnE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateEstadoMedicoLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "CreateTutorLambdaVersion9DsjvxFyYqNnpTq5pRGP75HVArlT5OKYlul8p70o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateTutorLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetTutoresLambdaVersionDUD0KiIdnIcEKp9L7k8usmdb6qaILjBmPctXzKZ2hf0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTutoresLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetTutorLambdaVersionG6Z2KASECZPpY5ABBNDGlg4aTZhKNmk2ohwxmscY5GY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTutorLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "UpdateTutorLambdaVersionnkJjoHbTEotZmjTjFysVAOScbbdvKiVi2JJ0LOF0NE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateTutorLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetPacientesByTutorLambdaVersionCkHllFVwUZ4aPX0GtkIxyYVHlhmAhjtYYJIBWYyqlTU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPacientesByTutorLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetHistorialPacienteLambdaVersionUs9LKt8bh7SytCbqNlACspdyx4kHHQlJgXsy1j0LuaI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetHistorialPacienteLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetFichaClinicaLambdaVersionpHxkUPNiCyUz4NSsU3DkE9nXNjQSqyrmVsfrLmsiY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetFichaClinicaLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "RankingProcedimientosLambdaVersionHG8RGi7uQjg6ohS7ev0QX6eZ7aTUIBJp4dvbMoXEEU8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RankingProcedimientosLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "GetVacunasPacienteLambdaVersionrPuQVTVv7JToPSj4Ggt8dXPCYbVI8L6mDtSRR3ts": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetVacunasPacienteLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "VolumenYGastoPromedioPorMesLambdaVersion7aSubzp39iqt3bg55RP587HIlDXeP3U5MG3Y9drFLI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VolumenYGastoPromedioPorMesLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "DistribucionPorEspecialidadLambdaVersionHvigvR9BOWkyCEhh277eiCKdlnCvacxRCMy0GwqfHY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DistribucionPorEspecialidadLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "TopMedicamentosLambdaVersion6sqG2Af83lpjsSnNTNwAvURWtXDkN2G5wxf7htpvAk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TopMedicamentosLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "EvolucionIngresosVsCostesLambdaVersion7a2StvSVX7BNhvm61oePtRB0BN25Euxz3NeeP2gGnc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EvolucionIngresosVsCostesLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "DemandaVacunasPorMesLambdaVersionmFDITTjppB1fwl3EKt8vjmheniemocu32HyQIWhlzo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DemandaVacunasPorMesLambdaFunction"
              },
              "CodeSha256": "nOD2sEPVuLR9uUXdd91lwKwy95wO30vahHXDq9ELghA="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-DynamoTest",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreatePacienteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreatePacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreatePaciente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreatePacienteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostPaciente": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /paciente",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreatePaciente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreatePaciente"
          },
          "GetPacientesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPacientesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetPacientes": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetPacientesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPaciente": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /paciente",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetPacientes"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetPacientes"
          },
          "GetPacienteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetPaciente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetPacienteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPacienteIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /paciente/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetPaciente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetPaciente"
          },
          "UpdatePacienteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdatePacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdatePaciente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdatePacienteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutPacienteIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /paciente/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdatePaciente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdatePaciente"
          },
          "CreateMedicoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateMedicoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateMedico": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateMedicoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostMedico": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /medico",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateMedico"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateMedico"
          },
          "GetMedicosLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMedicosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetMedicos": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMedicosLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMedico": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /medico",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetMedicos"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetMedicos"
          },
          "GetMedicoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMedicoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetMedico": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMedicoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMedicoIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /medico/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetMedico"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetMedico"
          },
          "UpdateMedicoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateMedicoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateMedico": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateMedicoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutMedicoIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /medico/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateMedico"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateMedico"
          },
          "UpdateEstadoMedicoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateEstadoMedicoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateEstadoMedico": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateEstadoMedicoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePatchMedicoIdVarCambiarestado": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PATCH /medico/{id}/cambiarEstado",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateEstadoMedico"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateEstadoMedico"
          },
          "CreateTutorLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateTutorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateTutor": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateTutorLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostTutor": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /tutor",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateTutor"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateTutor"
          },
          "GetTutoresLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTutoresLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetTutores": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetTutoresLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetTutor": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /tutor",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetTutores"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetTutores"
          },
          "GetTutorLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTutorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetTutor": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetTutorLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetTutorIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /tutor/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetTutor"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetTutor"
          },
          "UpdateTutorLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateTutorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateTutor": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateTutorLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutTutorIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /tutor/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateTutor"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateTutor"
          },
          "GetPacientesByTutorLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPacientesByTutorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetPacientesByTutor": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetPacientesByTutorLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetTutorIdVarPacientes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /tutor/{id}/pacientes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetPacientesByTutor"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetPacientesByTutor"
          },
          "GetHistorialPacienteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetHistorialPacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetHistorialPaciente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetHistorialPacienteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPacienteIdVarHistorial": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /paciente/{id}/historial",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetHistorialPaciente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetHistorialPaciente"
          },
          "GetFichaClinicaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetFichaClinicaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetFichaClinica": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetFichaClinicaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPacienteIdVarFichaclinica": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /paciente/{id}/fichaClinica",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetFichaClinica"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetFichaClinica"
          },
          "RankingProcedimientosLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RankingProcedimientosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRankingProcedimientos": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RankingProcedimientosLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetProcedimientosRanking": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /procedimientos/ranking",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRankingProcedimientos"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRankingProcedimientos"
          },
          "GetVacunasPacienteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetVacunasPacienteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetVacunasPaciente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetVacunasPacienteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPacienteIdVarVacunas": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /paciente/{id}/vacunas",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetVacunasPaciente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetVacunasPaciente"
          },
          "VolumenYGastoPromedioPorMesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "VolumenYGastoPromedioPorMesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationVolumenYGastoPromedioPorMes": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"VolumenYGastoPromedioPorMesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDashboardVolumengastomensual": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dashboard/volumenGastoMensual",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationVolumenYGastoPromedioPorMes"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationVolumenYGastoPromedioPorMes"
          },
          "DistribucionPorEspecialidadLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DistribucionPorEspecialidadLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDistribucionPorEspecialidad": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DistribucionPorEspecialidadLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDashboardDistribucionespecialidades": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dashboard/distribucionEspecialidades",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDistribucionPorEspecialidad"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDistribucionPorEspecialidad"
          },
          "TopMedicamentosLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TopMedicamentosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationTopMedicamentos": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"TopMedicamentosLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDashboardTopmedicamentos": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dashboard/topMedicamentos",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTopMedicamentos"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTopMedicamentos"
          },
          "EvolucionIngresosVsCostesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EvolucionIngresosVsCostesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEvolucionIngresosVsCostes": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EvolucionIngresosVsCostesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDashboardEvolucioningresovscostes": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dashboard/evolucionIngresoVsCostes",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEvolucionIngresosVsCostes"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEvolucionIngresosVsCostes"
          },
          "DemandaVacunasPorMesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DemandaVacunasPorMesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDemandaVacunasPorMes": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DemandaVacunasPorMesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetDashboardDemandavacunasmensual": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /dashboard/demandaVacunasMensual",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDemandaVacunasPorMes"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDemandaVacunasPorMes"
          },
          "PacienteTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Paciente",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idPaciente",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idTutor",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idPaciente",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "PacientesPorTutorIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "idTutor",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "INCLUDE",
                    "NonKeyAttributes": [
                      "nombre",
                      "sexo",
                      "raza"
                    ]
                  }
                }
              ]
            }
          },
          "MedicoTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Medico",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idMedico",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idMedico",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "FichaClinicaTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "FichaClinica",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idPaciente",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "fechaHora",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idMedico",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "procedimiento",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idPaciente",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "fechaHora",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "FichaPorMedicoIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "idMedico",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "fechaHora",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "KEYS_ONLY"
                  }
                },
                {
                  "IndexName": "ProcedimientoIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "procedimiento",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "INCLUDE",
                    "NonKeyAttributes": [
                      "costo"
                    ]
                  }
                }
              ]
            }
          },
          "TutorTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Tutor",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idTutor",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idTutor",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "MedicamentosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Medicamentos",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idMedicamento",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idMedicamento",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "ProcedimientosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Procedimientos",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idProcedimiento",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idProcedimiento",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "VacunasTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Vacunas",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idVacuna",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idVacuna",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-d106c65f-3024",
            "Export": {
              "Name": "sls-DynamoTest-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreatePacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreatePacienteLambdaVersionaoHYpKpjamkjWFObBXJqp0khvuyrmPrl13qzlIgxLw"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-CreatePacienteLambdaFunctionQualifiedArn"
            }
          },
          "GetPacientesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPacientesLambdaVersionbYbzgpEKJZmtgQZlGupYMPyeWgPdgtBsIEJQTERLO4s"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetPacientesLambdaFunctionQualifiedArn"
            }
          },
          "GetPacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPacienteLambdaVersionKeJK9cNF6fXleZAKO182V1fHtq38TlXkQArlxdjo8nc"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetPacienteLambdaFunctionQualifiedArn"
            }
          },
          "UpdatePacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdatePacienteLambdaVersionshyP809TF35FxHHmde73WZ7RbTAHcqNZWwon0SYCIfA"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-UpdatePacienteLambdaFunctionQualifiedArn"
            }
          },
          "CreateMedicoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateMedicoLambdaVersionGoT1iSXr3fK0Ula8W958qkAUQGzjeAVBSKDZ6DFxZE"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-CreateMedicoLambdaFunctionQualifiedArn"
            }
          },
          "GetMedicosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMedicosLambdaVersionYG8AHCEfoVC3F5OHVpu5AOTvXtPmALcWqcxywkJGk"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetMedicosLambdaFunctionQualifiedArn"
            }
          },
          "GetMedicoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMedicoLambdaVersiong5umKU1WfmDmfJBXgDWxl4Dne7U6BPvv9IuTp6qhPA"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetMedicoLambdaFunctionQualifiedArn"
            }
          },
          "UpdateMedicoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateMedicoLambdaVersionVDJdwnrJcjlcK9lEaL5grcHdWbVXBnjK2022aXeKTsw"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-UpdateMedicoLambdaFunctionQualifiedArn"
            }
          },
          "UpdateEstadoMedicoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateEstadoMedicoLambdaVersionIyJVqiNt7SohM4xKdHVlv3GqAPczGnwcQZkfsfnE"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-UpdateEstadoMedicoLambdaFunctionQualifiedArn"
            }
          },
          "CreateTutorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateTutorLambdaVersion9DsjvxFyYqNnpTq5pRGP75HVArlT5OKYlul8p70o"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-CreateTutorLambdaFunctionQualifiedArn"
            }
          },
          "GetTutoresLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTutoresLambdaVersionDUD0KiIdnIcEKp9L7k8usmdb6qaILjBmPctXzKZ2hf0"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetTutoresLambdaFunctionQualifiedArn"
            }
          },
          "GetTutorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTutorLambdaVersionG6Z2KASECZPpY5ABBNDGlg4aTZhKNmk2ohwxmscY5GY"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetTutorLambdaFunctionQualifiedArn"
            }
          },
          "UpdateTutorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateTutorLambdaVersionnkJjoHbTEotZmjTjFysVAOScbbdvKiVi2JJ0LOF0NE"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-UpdateTutorLambdaFunctionQualifiedArn"
            }
          },
          "GetPacientesByTutorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPacientesByTutorLambdaVersionCkHllFVwUZ4aPX0GtkIxyYVHlhmAhjtYYJIBWYyqlTU"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetPacientesByTutorLambdaFunctionQualifiedArn"
            }
          },
          "GetHistorialPacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetHistorialPacienteLambdaVersionUs9LKt8bh7SytCbqNlACspdyx4kHHQlJgXsy1j0LuaI"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetHistorialPacienteLambdaFunctionQualifiedArn"
            }
          },
          "GetFichaClinicaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetFichaClinicaLambdaVersionpHxkUPNiCyUz4NSsU3DkE9nXNjQSqyrmVsfrLmsiY"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetFichaClinicaLambdaFunctionQualifiedArn"
            }
          },
          "RankingProcedimientosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RankingProcedimientosLambdaVersionHG8RGi7uQjg6ohS7ev0QX6eZ7aTUIBJp4dvbMoXEEU8"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-RankingProcedimientosLambdaFunctionQualifiedArn"
            }
          },
          "GetVacunasPacienteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetVacunasPacienteLambdaVersionrPuQVTVv7JToPSj4Ggt8dXPCYbVI8L6mDtSRR3ts"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-GetVacunasPacienteLambdaFunctionQualifiedArn"
            }
          },
          "VolumenYGastoPromedioPorMesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VolumenYGastoPromedioPorMesLambdaVersion7aSubzp39iqt3bg55RP587HIlDXeP3U5MG3Y9drFLI"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-VolumenYGastoPromedioPorMesLambdaFunctionQualifiedArn"
            }
          },
          "DistribucionPorEspecialidadLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DistribucionPorEspecialidadLambdaVersionHvigvR9BOWkyCEhh277eiCKdlnCvacxRCMy0GwqfHY"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-DistribucionPorEspecialidadLambdaFunctionQualifiedArn"
            }
          },
          "TopMedicamentosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TopMedicamentosLambdaVersion6sqG2Af83lpjsSnNTNwAvURWtXDkN2G5wxf7htpvAk"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-TopMedicamentosLambdaFunctionQualifiedArn"
            }
          },
          "EvolucionIngresosVsCostesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EvolucionIngresosVsCostesLambdaVersion7a2StvSVX7BNhvm61oePtRB0BN25Euxz3NeeP2gGnc"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-EvolucionIngresosVsCostesLambdaFunctionQualifiedArn"
            }
          },
          "DemandaVacunasPorMesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DemandaVacunasPorMesLambdaVersionmFDITTjppB1fwl3EKt8vjmheniemocu32HyQIWhlzo"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-DemandaVacunasPorMesLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-DynamoTest-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "createPaciente": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/paciente"
          }
        ],
        "name": "DynamoTest-dev-createPaciente",
        "originalHandler": "src/paciente.createPaciente",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "createPaciente"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "CreatePacienteLambdaVersionaoHYpKpjamkjWFObBXJqp0khvuyrmPrl13qzlIgxLw"
      },
      "getPacientes": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/paciente"
          }
        ],
        "name": "DynamoTest-dev-getPacientes",
        "originalHandler": "src/paciente.getPacientes",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getPacientes"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetPacientesLambdaVersionbYbzgpEKJZmtgQZlGupYMPyeWgPdgtBsIEJQTERLO4s"
      },
      "getPaciente": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/paciente/{id}"
          }
        ],
        "name": "DynamoTest-dev-getPaciente",
        "originalHandler": "src/paciente.getPaciente",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getPaciente"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetPacienteLambdaVersionKeJK9cNF6fXleZAKO182V1fHtq38TlXkQArlxdjo8nc"
      },
      "updatePaciente": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/paciente/{id}"
          }
        ],
        "name": "DynamoTest-dev-updatePaciente",
        "originalHandler": "src/paciente.updatePaciente",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "updatePaciente"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "UpdatePacienteLambdaVersionshyP809TF35FxHHmde73WZ7RbTAHcqNZWwon0SYCIfA"
      },
      "createMedico": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/medico",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/medico"
          }
        ],
        "name": "DynamoTest-dev-createMedico",
        "originalHandler": "src/medico.createMedico",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "createMedico"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "CreateMedicoLambdaVersionGoT1iSXr3fK0Ula8W958qkAUQGzjeAVBSKDZ6DFxZE"
      },
      "getMedicos": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/medico",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/medico"
          }
        ],
        "name": "DynamoTest-dev-getMedicos",
        "originalHandler": "src/medico.getMedicos",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getMedicos"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetMedicosLambdaVersionYG8AHCEfoVC3F5OHVpu5AOTvXtPmALcWqcxywkJGk"
      },
      "getMedico": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/medico/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/medico/{id}"
          }
        ],
        "name": "DynamoTest-dev-getMedico",
        "originalHandler": "src/medico.getMedico",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getMedico"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetMedicoLambdaVersiong5umKU1WfmDmfJBXgDWxl4Dne7U6BPvv9IuTp6qhPA"
      },
      "updateMedico": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/medico/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/medico/{id}"
          }
        ],
        "name": "DynamoTest-dev-updateMedico",
        "originalHandler": "src/medico.updateMedico",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "updateMedico"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "UpdateMedicoLambdaVersionVDJdwnrJcjlcK9lEaL5grcHdWbVXBnjK2022aXeKTsw"
      },
      "updateEstadoMedico": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/medico/{id}/cambiarEstado",
              "method": "patch"
            },
            "resolvedMethod": "PATCH",
            "resolvedPath": "/medico/{id}/cambiarEstado"
          }
        ],
        "name": "DynamoTest-dev-updateEstadoMedico",
        "originalHandler": "src/medico.updateEstadoMedico",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "updateEstadoMedico"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "UpdateEstadoMedicoLambdaVersionIyJVqiNt7SohM4xKdHVlv3GqAPczGnwcQZkfsfnE"
      },
      "createTutor": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/tutor",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/tutor"
          }
        ],
        "name": "DynamoTest-dev-createTutor",
        "originalHandler": "src/tutor.createTutor",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "createTutor"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "CreateTutorLambdaVersion9DsjvxFyYqNnpTq5pRGP75HVArlT5OKYlul8p70o"
      },
      "getTutores": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/tutor",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/tutor"
          }
        ],
        "name": "DynamoTest-dev-getTutores",
        "originalHandler": "src/tutor.getTutores",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getTutores"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetTutoresLambdaVersionDUD0KiIdnIcEKp9L7k8usmdb6qaILjBmPctXzKZ2hf0"
      },
      "getTutor": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/tutor/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/tutor/{id}"
          }
        ],
        "name": "DynamoTest-dev-getTutor",
        "originalHandler": "src/tutor.getTutor",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getTutor"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetTutorLambdaVersionG6Z2KASECZPpY5ABBNDGlg4aTZhKNmk2ohwxmscY5GY"
      },
      "updateTutor": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/tutor/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/tutor/{id}"
          }
        ],
        "name": "DynamoTest-dev-updateTutor",
        "originalHandler": "src/tutor.updateTutor",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "updateTutor"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "UpdateTutorLambdaVersionnkJjoHbTEotZmjTjFysVAOScbbdvKiVi2JJ0LOF0NE"
      },
      "getPacientesByTutor": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/tutor/{id}/pacientes",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/tutor/{id}/pacientes"
          }
        ],
        "name": "DynamoTest-dev-getPacientesByTutor",
        "originalHandler": "src/tutor.getPacientesByTutor",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getPacientesByTutor"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetPacientesByTutorLambdaVersionCkHllFVwUZ4aPX0GtkIxyYVHlhmAhjtYYJIBWYyqlTU"
      },
      "getHistorialPaciente": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente/{id}/historial",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/paciente/{id}/historial"
          }
        ],
        "name": "DynamoTest-dev-getHistorialPaciente",
        "originalHandler": "src/busquedas.historialPaciente",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getHistorialPaciente"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetHistorialPacienteLambdaVersionUs9LKt8bh7SytCbqNlACspdyx4kHHQlJgXsy1j0LuaI"
      },
      "getFichaClinica": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente/{id}/fichaClinica",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/paciente/{id}/fichaClinica"
          }
        ],
        "name": "DynamoTest-dev-getFichaClinica",
        "originalHandler": "src/busquedas.fichaClinicaPaciente",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getFichaClinica"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetFichaClinicaLambdaVersionpHxkUPNiCyUz4NSsU3DkE9nXNjQSqyrmVsfrLmsiY"
      },
      "rankingProcedimientos": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/procedimientos/ranking",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/procedimientos/ranking"
          }
        ],
        "name": "DynamoTest-dev-rankingProcedimientos",
        "originalHandler": "src/busquedas.rankingProcedimientos",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "rankingProcedimientos"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "RankingProcedimientosLambdaVersionHG8RGi7uQjg6ohS7ev0QX6eZ7aTUIBJp4dvbMoXEEU8"
      },
      "getVacunasPaciente": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/paciente/{id}/vacunas",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/paciente/{id}/vacunas"
          }
        ],
        "name": "DynamoTest-dev-getVacunasPaciente",
        "originalHandler": "src/busquedas.vacunasPaciente",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "getVacunasPaciente"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "GetVacunasPacienteLambdaVersionrPuQVTVv7JToPSj4Ggt8dXPCYbVI8L6mDtSRR3ts"
      },
      "volumenYGastoPromedioPorMes": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/dashboard/volumenGastoMensual",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dashboard/volumenGastoMensual"
          }
        ],
        "name": "DynamoTest-dev-volumenYGastoPromedioPorMes",
        "originalHandler": "src/queriesdashboard.volumenYGastoPromedioPorMes",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "volumenYGastoPromedioPorMes"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "VolumenYGastoPromedioPorMesLambdaVersion7aSubzp39iqt3bg55RP587HIlDXeP3U5MG3Y9drFLI"
      },
      "distribucionPorEspecialidad": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/dashboard/distribucionEspecialidades",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dashboard/distribucionEspecialidades"
          }
        ],
        "name": "DynamoTest-dev-distribucionPorEspecialidad",
        "originalHandler": "src/queriesdashboard.distribucionPorEspecialidad",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "distribucionPorEspecialidad"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "DistribucionPorEspecialidadLambdaVersionHvigvR9BOWkyCEhh277eiCKdlnCvacxRCMy0GwqfHY"
      },
      "topMedicamentos": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/dashboard/topMedicamentos",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dashboard/topMedicamentos"
          }
        ],
        "name": "DynamoTest-dev-topMedicamentos",
        "originalHandler": "src/queriesdashboard.topMedicamentos",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "topMedicamentos"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "TopMedicamentosLambdaVersion6sqG2Af83lpjsSnNTNwAvURWtXDkN2G5wxf7htpvAk"
      },
      "evolucionIngresosVsCostes": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/dashboard/evolucionIngresoVsCostes",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dashboard/evolucionIngresoVsCostes"
          }
        ],
        "name": "DynamoTest-dev-evolucionIngresosVsCostes",
        "originalHandler": "src/queriesdashboard.evolucionIngresosVsCostes",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "evolucionIngresosVsCostes"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "EvolucionIngresosVsCostesLambdaVersion7a2StvSVX7BNhvm61oePtRB0BN25Euxz3NeeP2gGnc"
      },
      "demandaVacunasPorMes": {
        "handler": "index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/dashboard/demandaVacunasMensual",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/dashboard/demandaVacunasMensual"
          }
        ],
        "name": "DynamoTest-dev-demandaVacunasPorMes",
        "originalHandler": "src/queriesdashboard.demandaVacunasPorMes",
        "runtime": "nodejs20.x",
        "environment": {
          "SLS_IOT_ENDPOINT": "a286xeda0u113j-ats.iot.us-east-1.amazonaws.com",
          "SLS_SERVICE": "DynamoTest",
          "SLS_STAGE": "dev",
          "SLS_FUNCTION": "demandaVacunasPorMes"
        },
        "package": {
          "artifact": "/home/matti/Documents/UDD/ADB/Entregas/MattiasMorales_EV01/dynamo/.serverless/DynamoTest.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "vpc": {},
        "versionLogicalId": "DemandaVacunasPorMesLambdaVersionmFDITTjppB1fwl3EKt8vjmheniemocu32HyQIWhlzo"
      }
    },
    "resources": {
      "Resources": {
        "PacienteTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Paciente",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idPaciente",
                "AttributeType": "S"
              },
              {
                "AttributeName": "idTutor",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idPaciente",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "PacientesPorTutorIndex",
                "KeySchema": [
                  {
                    "AttributeName": "idTutor",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "INCLUDE",
                  "NonKeyAttributes": [
                    "nombre",
                    "sexo",
                    "raza"
                  ]
                }
              }
            ]
          }
        },
        "MedicoTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Medico",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idMedico",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idMedico",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "FichaClinicaTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "FichaClinica",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idPaciente",
                "AttributeType": "S"
              },
              {
                "AttributeName": "fechaHora",
                "AttributeType": "S"
              },
              {
                "AttributeName": "idMedico",
                "AttributeType": "S"
              },
              {
                "AttributeName": "procedimiento",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idPaciente",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "fechaHora",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "FichaPorMedicoIndex",
                "KeySchema": [
                  {
                    "AttributeName": "idMedico",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "fechaHora",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "KEYS_ONLY"
                }
              },
              {
                "IndexName": "ProcedimientoIndex",
                "KeySchema": [
                  {
                    "AttributeName": "procedimiento",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "INCLUDE",
                  "NonKeyAttributes": [
                    "costo"
                  ]
                }
              }
            ]
          }
        },
        "TutorTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Tutor",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idTutor",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idTutor",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "MedicamentosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Medicamentos",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idMedicamento",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idMedicamento",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "ProcedimientosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Procedimientos",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idProcedimiento",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idProcedimiento",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "VacunasTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Vacunas",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idVacuna",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idVacuna",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "twinmt",
      "service": "DynamoTest",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "org": "twinmt",
    "orgId": null,
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/DynamoTest/dev/1752726817755-2025-07-17T04:33:37.755Z",
    "artifact": "DynamoTest.zip"
  }
}