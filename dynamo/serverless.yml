# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: twinmt
service: DynamoTest
provider:
  name: aws 
  role: arn:aws:iam::280053524810:role/LabRole
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sts:AssumeRole
        - dynamodb:*
      Resource: 
        - arn:aws:dynamodb:us-east-1:*:table/Paciente
        - arn:aws:dynamodb:us-east-1:*:table/Medico
        - arn:aws:dynamodb:us-east-1:*:table/Tutor
        - arn:aws:dynamodb:us-east-1:*:table/FichaClinica
        - arn:aws:dynamodb:us-east-1:*:table/Medicamentos
        - arn:aws:dynamodb:us-east-1:*:table/Procedimientos
        - arn:aws:dynamodb:us-east-1:*:table/Vacunas
        - arn:aws:dynamodb:us-east-1:*:table/Medicamentos
  environment:
    PACIENTETABLE: Paciente
    MEDICOTABLE: Medico
    TUTORTABLE: Tutor
    FICHACLINICATABLE: FichaClinica
    PROCEDIMIENTOTABLE: Procedimientos
    VACUNATABLE: Vacunas
    MEDICAMENTOTABLE: Medicamentos
 
functions:
    # Crear, obtener, actualizar y eliminar pacientes 
    createPaciente:
      handler: src/paciente.createPaciente
      events:
        - httpApi:
            path: /paciente
            method: post

    getPacientes:
      handler: src/paciente.getPacientes
      events:
        - httpApi:
            path: /paciente
            method: get

    getPaciente:
      handler: src/paciente.getPaciente
      events:
        - httpApi:
            path: /paciente/{id}
            method: get
    
    updatePaciente:
      handler: src/paciente.updatePaciente
      events:
        - httpApi:
            path: /paciente/{id}
            method: put
      
    # Crear, obtener, actualizar y activar/desactivar m√©dicos
    createMedico:
      handler: src/medico.createMedico
      events:
        - httpApi:
            path: /medico
            method: post

    getMedicos:
      handler: src/medico.getMedicos
      events:
        - httpApi:
            path: /medico
            method: get

    getMedico:
      handler: src/medico.getMedico
      events:
        - httpApi:
            path: /medico/{id}
            method: get
    
    updateMedico:
      handler: src/medico.updateMedico
      events:
        - httpApi:
            path: /medico/{id}
            method: put

    updateEstadoMedico:
      handler: src/medico.updateEstadoMedico
      events:
        - httpApi:
            path: /medico/{id}/cambiarEstado
            method: patch

    # Crear, obtener, actualizar y eliminar tutores
    createTutor:
      handler: src/tutor.createTutor
      events:
        - httpApi:
            path: /tutor
            method: post

    getTutores:
      handler: src/tutor.getTutores
      events:
        - httpApi:
            path: /tutor
            method: get

    getTutor:
      handler: src/tutor.getTutor
      events:
        - httpApi:
            path: /tutor/{id}
            method: get
    
    updateTutor:
      handler: src/tutor.updateTutor
      events:
        - httpApi:
            path: /tutor/{id}
            method: put

    getPacientesByTutor:
      handler: src/tutor.getPacientesByTutor 
      events:
        - httpApi:
            path: /tutor/{id}/pacientes
            method: get
    

    getHistorialPaciente:
      handler: src/busquedas.historialPaciente
      events:
        - httpApi:
            path: /paciente/{id}/historial
            method: get

    getFichaClinica:
      handler: src/busquedas.fichaClinicaPaciente
      events:
        - httpApi:
            path: /paciente/{id}/fichaClinica
            method: get

    rankingProcedimientos:
      handler: src/busquedas.rankingProcedimientos
      events:
        - httpApi:
            path: /procedimientos/ranking
            method: get

    getVacunasPaciente:
      handler: src/busquedas.vacunasPaciente
      events:
        - httpApi:
            path: /paciente/{id}/vacunas
            method: get

    volumenYGastoPromedioPorMes:
      handler: src/queriesdashboard.volumenYGastoPromedioPorMes
      events:
        - httpApi:
            path: /dashboard/volumenGastoMensual
            method: get

    distribucionPorEspecialidad:
      handler: src/queriesdashboard.distribucionPorEspecialidad
      events:
        - httpApi:
            path: /dashboard/distribucionEspecialidades
            method: get

    topMedicamentos:
      handler: src/queriesdashboard.topMedicamentos
      events:
        - httpApi:
            path: /dashboard/topMedicamentos
            method: get

    evolucionIngresosVsCostes:
      handler: src/queriesdashboard.evolucionIngresosVsCostes
      events:
        - httpApi:
            path: /dashboard/evolucionIngresoVsCostes
            method: get

    demandaVacunasPorMes:
      handler: src/queriesdashboard.demandaVacunasPorMes
      events:
        - httpApi:
            path: /dashboard/demandaVacunasMensual
            method: get
            

# Creando las tablas
resources:
  Resources:

    PacienteTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Paciente        
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idPaciente   
            AttributeType: S
          - AttributeName: idTutor      
            AttributeType: S
        KeySchema:
          - AttributeName: idPaciente
            KeyType: HASH
        GlobalSecondaryIndexes: 
          - IndexName: PacientesPorTutorIndex 
            KeySchema:
              - AttributeName: idTutor 
                KeyType: HASH
            Projection:
              ProjectionType: INCLUDE 
              NonKeyAttributes:
                - nombre 
                - sexo
                - raza

    MedicoTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Medico        
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idMedico   
            AttributeType: S
        KeySchema:
          - AttributeName: idMedico
            KeyType: HASH

    FichaClinicaTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: FichaClinica        
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idPaciente  
            AttributeType: S
          - AttributeName: fechaHora 
            AttributeType: S
          - AttributeName: idMedico
            AttributeType: S
          - AttributeName: procedimiento
            AttributeType: S
        KeySchema:
          - AttributeName: idPaciente
            KeyType: HASH
          - AttributeName: fechaHora
            KeyType: RANGE
        GlobalSecondaryIndexes: 
          - IndexName: FichaPorMedicoIndex
            KeySchema:
              - AttributeName: idMedico
                KeyType: HASH
              - AttributeName: fechaHora
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
          - IndexName: ProcedimientoIndex
            KeySchema:
              - AttributeName: procedimiento
                KeyType: HASH 
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - costo 

    TutorTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Tutor       
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idTutor   
            AttributeType: S
        KeySchema:
          - AttributeName: idTutor
            KeyType: HASH

    MedicamentosTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Medicamentos        
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idMedicamento   
            AttributeType: S
        KeySchema:
          - AttributeName: idMedicamento
            KeyType: HASH

    ProcedimientosTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Procedimientos        
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idProcedimiento   
            AttributeType: S
        KeySchema:
          - AttributeName: idProcedimiento
            KeyType: HASH
    
    VacunasTable:                 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Vacunas        
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: idVacuna   
            AttributeType: S
        KeySchema:
          - AttributeName: idVacuna
            KeyType: HASH
